[root@portal ~]# history 
    1  yum -y upgrade
    2  netstat
    3  netstat /n
    4  netstat -n
    5  netstat -t
    6  netstat -u
    7  netstat -p tcp
    8  netstat | grep tcp
    9  netstat -a| grep tcp
   10  df -h
   11  reboot
   12  ps -ef
   13  yum -y upgrade
   14  reboot
   15  ps -ef
   16  uname -a
   17  uptime 
   18  ps -ef
   19  cat /var/log/messages
   20  ps -ef
   21  last
   22  top
   23  ps -ef
   24  init 5
   25  ps -ef
   26  yum install xfce
   27  yum install x2go
   28  xum list
   29  yum list
   30  yum list< grep -i x3go
   31  yum list| grep -i x3go
   32  yum -y upgrade
   33  ps -ef
   34  yum -y upgrade
   35  id
   36  ps -ef
   37  top
   38  cat /etc/redhat-release 
   39  sync
   40  top
   41  cat /var/log/messages
   42  ps -ef
   43  top
   44  ifconfig 
   45  nmcli device status
   46  vi  /etc/sysconfig/network-scripts/ifcfg-eth0
   47  vi  /etc/sysconfig/network-scripts/ifcfg-lo 
   48  vi  /etc/sysconfig/network-scripts/ifcfg-eth0
   49  vi  /etc/sysconfig/network-scripts/ifcfg-lo 
   50  ps -ef
   51  uanme -a
   52  uname -a
   53  reboot
   54  vi /etc/hostname 
   55  reboot
   56  vi /etc/hostname 
   57  cat /etc/hosts
   58  ntpq -p
   59  ps -ef
   60  ls
   61  top
   62  ls
   63  history -a
   64  ### instalklation docker als vorraussetzung für kubeadm
   65  yum install -y docker
   66  systemctl enable docker && systemctl start docker
   67  systemctl start docker
   68  systemctl status docker.service
   69  vi /etc/sestatus.conf 
   70  vi /etc/selinux/semanage.conf 
   71  vi /etc/sysconfig/selinux
   72  systemctl status docker.service
   73  systemctl strat docker.service
   74  systemctl start docker.service
   75  journalctl -xe
   76  yum -y upgrade
   77  systemctl start docker.service
   78  reboot
   79  systemctl start docker.service
   80  journalctl -xe
   81  date
   82  history 
   83  ### docker start??
   84  vi /etc/sysconfig/docker
   85  ls
   86  cp /etc/sysconfig/docker /etc/sysconfig/docker.20180420
   87  vi /etc/sysconfig/docker
   88  systemctl start docker.service
   89  journalctl -xe
   90  vi /etc/sysconfig/docker
   91  systemctl start docker.service
   92  diff /etc/sysconfig/docker /etc/sysconfig/docker.20180420 
   93  ##OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false --storage-driver=devicemapper'
   94  #OPTIONS='--log-driver=journald --signature-verification=false --storage-driver=devicemapper'
   95  # selinux funktionietr nicht mit der docker version und oberleay treiber
   96  cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

   97  cat /etc/yum.repos.d/kubernetes.repo
   98  setenforce 0
   99  yum install -y kubelet kubeadm kubectl
  100  systemctl enable kubelet && systemctl start kubelet
  101  docker info | grep -i cgroup
  102  cat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  103  # Cgroup Driver: systemd
  104  # prüfen ob docker und k8s die gleiche einstellung
  105  # netzwerk iptabels vorbeugung centos
  106  cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

  107  sysctl --system
  108  yum -y upgrade
  109  cat /etc/yum.repos.d/kubernetes.repo
  110  yum -y upgrade
  111  kubeadm init
  112  mkdir -p $HOME/.kube
  113    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  114    sudo chown $(id -u):$(id -g) $HOME/.kube/config
  115  export KUBECONFIG=/etc/kubernetes/admin.conf
  116  # nur merken für zusätzlcihe nodes: kubeadm join 10.0.0.169:6443 --token qistdm.upxqjbcbgbjjv8xh --discovery-token-ca-cert-hash sha256:75dcbcd5fd02e5251b1ee80e352588d7b2bf289945c6efffec24594b898ac5a2
  117  export kubever=$(kubectl version | base64 | tr -d '\n')
  118  echo $kubever
  119  kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"
  120  kubectl get nodes
  121  top
  122  kubectl get nodes
  123  history .
  124  history 
[root@portal ~]# history 
    1  yum -y upgrade
    2  netstat
    3  netstat /n
    4  netstat -n
    5  netstat -t
    6  netstat -u
    7  netstat -p tcp
    8  netstat | grep tcp
    9  netstat -a| grep tcp
   10  df -h
   11  reboot
   12  ps -ef
   13  yum -y upgrade
   14  reboot
   15  ps -ef
   16  uname -a
   17  uptime 
   18  ps -ef
   19  cat /var/log/messages
   20  ps -ef
   21  last
   22  top
   23  ps -ef
   24  init 5
   25  ps -ef
   26  yum install xfce
   27  yum install x2go
   28  xum list
   29  yum list
   30  yum list< grep -i x3go
   31  yum list| grep -i x3go
   32  yum -y upgrade
   33  ps -ef
   34  yum -y upgrade
   35  id
   36  ps -ef
   37  top
   38  cat /etc/redhat-release 
   39  sync
   40  top
   41  cat /var/log/messages
   42  ps -ef
   43  top
   44  ifconfig 
   45  nmcli device status
   46  vi  /etc/sysconfig/network-scripts/ifcfg-eth0
   47  vi  /etc/sysconfig/network-scripts/ifcfg-lo 
   48  vi  /etc/sysconfig/network-scripts/ifcfg-eth0
   49  vi  /etc/sysconfig/network-scripts/ifcfg-lo 
   50  ps -ef
   51  uanme -a
   52  uname -a
   53  reboot
   54  vi /etc/hostname 
   55  reboot
   56  vi /etc/hostname 
   57  cat /etc/hosts
   58  ntpq -p
   59  ps -ef
   60  ls
   61  top
   62  ls
   63  history -a
   64  ### instalklation docker als vorraussetzung für kubeadm
   65  yum install -y docker
   66  systemctl enable docker && systemctl start docker
   67  systemctl start docker
   68  systemctl status docker.service
   69  vi /etc/sestatus.conf 
   70  vi /etc/selinux/semanage.conf 
   71  vi /etc/sysconfig/selinux
   72  systemctl status docker.service
   73  systemctl strat docker.service
   74  systemctl start docker.service
   75  journalctl -xe
   76  yum -y upgrade
   77  systemctl start docker.service
   78  reboot
   79  systemctl start docker.service
   80  journalctl -xe
   81  date
   82  history 
   83  ### docker start??
   84  vi /etc/sysconfig/docker
   85  ls
   86  cp /etc/sysconfig/docker /etc/sysconfig/docker.20180420
   87  vi /etc/sysconfig/docker
   88  systemctl start docker.service
   89  journalctl -xe
   90  vi /etc/sysconfig/docker
   91  systemctl start docker.service
   92  diff /etc/sysconfig/docker /etc/sysconfig/docker.20180420 
   93  ##OPTIONS='--selinux-enabled --log-driver=journald --signature-verification=false --storage-driver=devicemapper'
   94  #OPTIONS='--log-driver=journald --signature-verification=false --storage-driver=devicemapper'
   95  # selinux funktionietr nicht mit der docker version und oberleay treiber
   96  cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

   97  cat /etc/yum.repos.d/kubernetes.repo
   98  setenforce 0
   99  yum install -y kubelet kubeadm kubectl
  100  systemctl enable kubelet && systemctl start kubelet
  101  docker info | grep -i cgroup
  102  cat /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  103  # Cgroup Driver: systemd
  104  # prüfen ob docker und k8s die gleiche einstellung
  105  # netzwerk iptabels vorbeugung centos
  106  cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

  107  sysctl --system
  108  yum -y upgrade
  109  cat /etc/yum.repos.d/kubernetes.repo
  110  yum -y upgrade
  111  kubeadm init
  112  mkdir -p $HOME/.kube
  113    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  114    sudo chown $(id -u):$(id -g) $HOME/.kube/config
  115  export KUBECONFIG=/etc/kubernetes/admin.conf
  116  # nur merken für zusätzlcihe nodes: kubeadm join 10.0.0.169:6443 --token qistdm.upxqjbcbgbjjv8xh --discovery-token-ca-cert-hash sha256:75dcbcd5fd02e5251b1ee80e352588d7b2bf289945c6efffec24594b898ac5a2
  117  export kubever=$(kubectl version | base64 | tr -d '\n')
  118  echo $kubever
  119  kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$kubever"
  120  kubectl get nodes
  121  top
  122  kubectl get nodes
  123  history .
  124  history 
